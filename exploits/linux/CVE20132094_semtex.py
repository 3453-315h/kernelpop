"""
https://raw.githubusercontent.com/realtalk/cve-2013-2094/master/semtex.c
"""
import os
from exploits.exploit import LinuxExploit
from src.kernels import KernelWindow
from constants import *


class CVE20132094_semtex(LinuxExploit):
	def __init__(self):
		super().__init__()
		self.name = "CVE20132094_semtex"
		self.formatted_name = "CVE-2013-2094"
		self.e_type = "linux"
		self.brief_desc = "perf_swevent_init Local root exploit (32 bit)"
		self.reliability = MEDIUM_RELIABILITY
		self.vulnerable_base = KernelWindow(GENERIC_LINUX, CONFIRMED_VULNERABLE, 0, 0, 0, 0, 0, 0)
		self.vulnerable_kernels = [
			KernelWindow(GENERIC_LINUX, CONFIRMED_VULNERABLE, 2, 6, 37, 3, 8, 9), 	# reported...maybe not real
			KernelWindow(CENTOS, CONFIRMED_VULNERABLE, 2, 6, 32, 2, 6, 37),	# centos
			KernelWindow(RHEL, CONFIRMED_VULNERABLE, 0, 0, 0, 2, 6, 32),	#kernel-2.6.32-358.6.2.el6.src.rpm		https://access.redhat.com/errata/RHSA-2013:0830
			KernelWindow(SUSE, CONFIRMED_VULNERABLE, 0, 0, 0, 3, 0, 74),	#kernel-default-3.0.74-0.6.8.1 			https://lists.opensuse.org/opensuse-security-announce/2013-05/msg00008.html
		]
		self.architecture = ARCHITECTURE_i686
		self.source_c_path = os.path.join(LINUX_EXPLOIT_SOURCE_PATH, "{}.c".format(self.name))
		self.compilation_path = os.path.join(PLAYGROUND_PATH, self.name)
		self.compilation_command = "gcc -o {} {} -O2".format(self.compilation_path, self.source_c_path)
		self.exploit_command = self.compilation_path

	def determine_vulnerability(self):
		color_print("\t[*] checking exploitation prerequisites for {}".format(self.name), color="blue")
		# if kernel matches...it should be vulnerable
		color_print("\t[-] system appears to be vulnerable to {}".format(self.name), color="green")
		return True
