"""
Base exploit class
"""
import os
from exploits.exploit import LinuxExploit
from src.kernels import KernelWindow
from constants import LOW_RELIABILITY, PLAYGROUND_PATH, color_print, GENERIC_LINUX, CONFIRMED_VULNERABLE, \
	LINUX_EXPLOIT_SOURCE_PATH

class CVE20176074(LinuxExploit):
	def __init__(self):
		super().__init__()
		self.name = "CVE20176074"
		self.formatted_name = "CVE-2017-6074"
		self.e_type = "linux"
		self.brief_desc = "`dccp_rcv_state_process` in net/dccp/input.c mishandles structs and can lead to local root"
		self.reliability = LOW_RELIABILITY						# due to statement in public announcement
		self.vulnerable_kernels = [
			KernelWindow(GENERIC_LINUX, CONFIRMED_VULNERABLE, 0, 0, 0, 4, 9, 11)
		]
		self.source_c_path = os.path.join(LINUX_EXPLOIT_SOURCE_PATH, "{}.c".format(self.name))
		self.compilation_path = os.path.join(PLAYGROUND_PATH, self.name)
		self.compilation_command = "gcc -o {} {}".format(self.compilation_path, self.source_c_path)
		self.exploit_command = self.compilation_path

	def determine_vulnerability(self):
		color_print("\t[*] checking exploitation prerequisites for {}".format(self.name), color="blue")
		# if kernel matches...it should be vulnerable
		color_print("\t[+] system appears to be vulnerable to {}".format(self.name), color="green")
