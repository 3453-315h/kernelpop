"""
https://www.qualys.com/2017/06/19/stack-clash/stack-clash.txt
"""
import os
from exploits.exploit import LinuxExploit
from src.kernels import KernelWindow
from constants import *


class CVE20171000373(LinuxExploit):
	def __init__(self):
		super().__init__()
		self.name = "CVE20171000373"
		self.formatted_name = "CVE-2017-1000373"
		self.e_type = "linux"
		self.brief_desc = "Stack clash vulnerability from qualys "
		self.reliability = HIGH_RELIABILITY
		self.vulnerable_base = KernelWindow(GENERIC_LINUX, BASE_VULNERABLE, 0, 0, 0, 4, 11, 5)
		self.vulnerable_kernels = [
			KernelWindow(OPENBSD, VERSION_VULNERABLE, 0, 0, 0, KERNEL_MAJOR_VERSION_CAP, 0, 0)
		]
		self.exploit_kernels = [
			KernelWindow(OPENBSD, EXPLOIT_AVAILABLE, 0, 0, 0, KERNEL_MAJOR_VERSION_CAP, 0, 0)
		]
		self.architecture = ARCHITECTURE_i686
		self.source_c_path = os.path.join(LINUX_EXPLOIT_SOURCE_PATH, "{}.c".format(self.name))
		self.compilation_path = os.path.join(PLAYGROUND_PATH, self.name)
		self.compilation_command = "gcc -o {} {}".format(self.compilation_path, self.source_c_path)
		self.exploit_command = self.compilation_path

	def determine_vulnerability(self):
		color_print("\t[*] checking exploitation prerequisites for {}".format(self.name), color="blue")
		# if kernel matches...it should be vulnerable
		color_print("\t[+] system appears to be vulnerable to {}".format(self.name), color="green")
		return True
