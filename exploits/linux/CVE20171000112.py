"""
adapted from:
https://github.com/SecWiki/linux-kernel-exploits/blob/master/2017/CVE-2017-1000112/poc.c
"""
import os
from exploits.exploit import LinuxExploit
from src.kernels import KernelWindow
from constants import PLAYGROUND_PATH, LINUX_EXPLOIT_SOURCE_PATH, HIGH_RELIABILITY, color_print, UBUNTU_14, \
	UBUNTU_16, CONFIRMED_VULNERABLE

class CVE20171000112(LinuxExploit):
	def __init__(self):
		super().__init__()
		self.name = "CVE20171000112"
		self.formatted_name = "CVE-2017-1000112"
		self.e_type = "linux"
		self.brief_desc = "ip_ufo_append_data() memory corruption flaw can be exploited to gain root privileges."
		self.reliability = HIGH_RELIABILITY
		self.vulnerable_kernels = [
			KernelWindow(UBUNTU_14, CONFIRMED_VULNERABLE, 4, 0, 0, 4, 4, 83),
			KernelWindow(UBUNTU_16, CONFIRMED_VULNERABLE, 4, 0, 0, 4, 8, 58),
		]
		self.source_c_path = os.path.join(LINUX_EXPLOIT_SOURCE_PATH, "{}.c".format(self.name))
		self.compilation_path = os.path.join(PLAYGROUND_PATH, self.name)
		self.compilation_command = "gcc -o {} {}".format(self.compilation_path, self.source_c_path)
		self.exploit_command = self.compilation_path

	def determine_vulnerability(self):
		"""
		:return: True if vulnerable, False if not
		"""
		color_print("\t[*] checking exploitation prerequisites for {}".format(self.name), color="blue")
		# if kernel matches...it should be vulnerable
		color_print("\t[+] system appears to be vulnerable to {}".format(self.name), color="green")
		return True
